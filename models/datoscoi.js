var Firebird = require('node-firebird');
var moment = require('moment');
var options = {};
//Para trabajar sobre la BD de SQL
const mysql = require('mysql');
const config = require('../config');
const con = mysql.createConnection(config.db);
/*==========================================*/
// Opciones para conectarse a la BD
/*==========================================*/
options.host = '127.0.0.1';
options.port = 3050;

options.database = 'C:\\Dac\\Sistemas Aspel\\COI8.00\\Datos\\Empresa6\\COI80EMPRE6.FDB';

//options.database = 'D:\\COI80EMPRE6.FDB';
options.user = 'SYSDBA';
options.password = 'masterkey';
options.lowercase_keys = false; // set to true to lowercase keys
options.role = null;            // default
options.pageSize = 4096;        // default when creating databaSE

var datosCOI = {};

datosCOI.getDepartamentos = function(){
   return new Promise((resolve,reject) => {
		
        Firebird.attach(options, function(err, db) {
          if (err)
                reject(err)
            // db = DATABASE
            db.query('SELECT * FROM DEPTOS', function(err, result) { 
                if(err)
                    reject(err);
               // console.log(JSON.stringify(result));
                // IMPORTANT: close the connection
                db.detach();
                resolve(result);
            });         
        });
    });

	
}
//Obtener datos de las cuentas por departamentos
datosCOI.getDatosCuentasXDpto = function(mes,anhio){
	  return new Promise((resolve,reject) => {
		
        Firebird.attach(options, function(err, db) {
          if (err){
                reject(err);
				console.log(err);
		  }	
		  console.log("1- "+mes+" 2- "+anhio);
		  var ch = 'S';
			var sel = 'SELECT T1.NUM_CTA AS NUMCUENTA,T1.NOMBRE AS NAMECUENTA,T1.DEPTSINO,T1.TIPO,T3.DESCRIP AS NAMEDPTO,T2.EJERCICIO,T2.DEPTO,';
			var saldo_inicial='';
			var total_cargos='';
			var total_abonos='';
			var saldo_final = '';
			var from_where = " FROM CUENTAS19 AS T1 INNER JOIN SALDOSDP19 AS T2 ON T1.NUM_CTA = T2.NUM_CTA INNER JOIN DEPTOS AS T3 ON T2.DEPTO = T3.DEPTO WHERE T1.DEPTSINO = 'S' ORDER BY T2.DEPTO,T1.NUM_CTA ASC";
			//
			var sql ='';
			switch(+mes){
				case 0:
					saldo_inicial = 'T2.INICIAL AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO01 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO01 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01-T2.ABONO01) AS SALDOFINAL';
					break;
				case 1:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01-T2.ABONO01) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO02 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO02 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02-T2.ABONO01-T2.ABONO02) AS SALDOFINAL';
					break;
				case 2:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02-T2.ABONO01-T2.ABONO02) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO03 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO03 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03-T2.ABONO01-T2.ABONO02-T2.ABONO03) AS SALDOFINAL';
					break;
				case 3:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03-T2.ABONO01-T2.ABONO02-T2.ABONO03) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO04 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO04 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04) AS SALDOFINAL';
					break;
				case 4:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO05 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO05 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05) AS SALDOFINAL';
					break;
				case 5:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO06 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO06 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06) AS SALDOFINAL';
					break;
				case 6:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO07 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO07 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07) AS SALDOFINAL';
					break;
				case 7:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO08 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO08 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08) AS SALDOFINAL';
					break;
				case 8:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO09 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO09 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09) AS SALDOFINAL';
					break;
				case 9:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO10 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO10 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10) AS SALDOFINAL';
					break;
				case 10:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO11 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO11 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10+T2.CARGO11-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10-T2.ABONO11) AS SALDOFINAL';
					break;
				case 11:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10+T2.CARGO11-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10-T2.ABONO11) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO12 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO12 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10+T2.CARGO11+T2.CARGO12-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10-T2.ABONO11-T2.ABONO12) AS SALDOFINAL';
					break;		
			}
			sql = sel+saldo_inicial+total_cargos+total_abonos+saldo_final+from_where;
			console.log("1- "+mes+" 2- "+anhio+" sql- "+sql);
            // db = DATABASE
			   db.query(sql, function(err, result) { 
					if(err){
						reject(err);
						console.log(err);
					}	
					//console.log(JSON.stringify(result));
					// IMPORTANT: close the connection
					db.detach();
					resolve(result);
					
				}); 
				
        });
    });
}
//Obtener datos de todas las cuentas 
datosCOI.getDatosCuentas = function(mes,anhio){
	//console.log("1- "+ mes+ "2- " +anhio);
	  return new Promise((resolve,reject) => {
		
        Firebird.attach(options, function(err, db) {
          if (err){
                reject(err);
				console.log(err);
		  }	
            // db = DATABASE
			var sel = 'SELECT T1.NUM_CTA AS NUMCUENTA,T1.NOMBRE AS NAMECUENTA,T1.DEPTSINO,T2.EJERCICIO,T1.TIPO,';
			var saldo_inicial='';
			var total_cargos='';
			var total_abonos='';
			var saldo_final = '';
			var from_where = '  FROM CUENTAS19 AS T1 INNER JOIN SALDOS19 AS T2 ON T1.NUM_CTA = T2.NUM_CTA ORDER BY NUMCUENTA ASC';
			var sql ='';
			switch(mes){
				case 0:
					saldo_inicial = 'T2.INICIAL AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO01 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO01 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01-T2.ABONO01) AS SALDOFINAL';
					break;
				case 1:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01-T2.ABONO01) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO02 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO02 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02-T2.ABONO01-T2.ABONO02) AS SALDOFINAL';
					break;
				case 2:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02-T2.ABONO01-T2.ABONO02) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO03 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO03 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03-T2.ABONO01-T2.ABONO02-T2.ABONO03) AS SALDOFINAL';
					break;
				case 3:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03-T2.ABONO01-T2.ABONO02-T2.ABONO03) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO04 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO04 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04) AS SALDOFINAL';
					break;
				case 4:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO05 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO05 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05) AS SALDOFINAL';
					break;
				case 5:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO06 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO06 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06) AS SALDOFINAL';
					break;
				case 6:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO07 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO07 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07) AS SALDOFINAL';
					break;
				case 7:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO08 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO08 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08) AS SALDOFINAL';
					break;
				case 8:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO09 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO09 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09) AS SALDOFINAL';
					break;
				case 9:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO10 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO10 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10) AS SALDOFINAL';
					break;
				case 10:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO11 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO11 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10+T2.CARGO11-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10-T2.ABONO11) AS SALDOFINAL';
					break;
				case 11:
					saldo_inicial = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10+T2.CARGO11-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10-T2.ABONO11) AS SALDOINICIAL,';
					total_cargos = 'T2.CARGO12 AS TOTALCARGOS,';
					total_abonos = 'T2.ABONO12 AS TOTALABONOS,';
					saldo_final = '(T2.INICIAL+T2.CARGO01+T2.CARGO02+T2.CARGO03+T2.CARGO04+T2.CARGO05+T2.CARGO06+T2.CARGO07+T2.CARGO08+T2.CARGO09+T2.CARGO10+T2.CARGO11+T2.CARGO12-T2.ABONO01-T2.ABONO02-T2.ABONO03-T2.ABONO04-T2.ABONO05-T2.ABONO06-T2.ABONO07-T2.ABONO08-T2.ABONO09-T2.ABONO10-T2.ABONO11-T2.ABONO12) AS SALDOFINAL';
					break;		
			}
			sql = sel+saldo_inicial+total_cargos+total_abonos+saldo_final+from_where;
			//console.log(sql);
			   db.query(sql, function(err, result) { 
					if(err){
						reject(err);
						console.log(err);
					}	
					//console.log(JSON.stringify(result));
					// IMPORTANT: close the connection
					db.detach();
					resolve(result);
					
				}); 
				
        });
    });

}

datosCOI.getDatosCuentasXDptoParaERXCC = function(){
	return new Promise((resolve,reject) => {
		
        Firebird.attach(options, function(err, db) {
          if (err){
                reject(err);
		  }	
           else{
			  // db = DATABASE
			var sql = 'SELECT  T3.SEGPAPA FROM CUENTAS19 AS T1 JOIN CTARUB AS T3 ON T1.NUM_CTA = T3.CUENTA WHERE RUBRO = 6';
            db.query(sql, function(err, result) { 
                if(err){
                    reject(err);
				}
				else{
					console.log(JSON.stringify(result));
				
					// IMPORTANT: close the connection
				
					 db.detach();
					 resolve(result);
				}
               
            });  
		   }         
        });
    });

	
}
datosCOI.getVentasXdepartamentos  = async function(dpto,mes){
	//INICIALIZACION DE VARIABLES
	var resultado = new Array();
	 //dpto = 3;
	mes = 11;
	var dpto1 = '000';
	dpto1+=dpto;
	dpto1 = dpto1.substring(1);
	meses = '';
	switch(+mes){
		case 0:
			meses= '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,T3.PRESUP01 AS PRESUP_JAN,(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN_ACUM, T3.PRESUP01 AS PRESUP_JAN_ACUM';
			break;
		case 1:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) AS REAL_FEB_ACUM, (T3.PRESUP01+T3.PRESUP02) AS PRESUP_FEB_ACUM';
			break;
		case 2:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) AS REAL_MAR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03) AS PRESUP_MAR_ACUM';
			break;
		case 3:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) AS REAL_APR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04) AS PRESUP_APR_ACUM';
			break;
		case 4:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) AS REAL_MAY_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05) AS PRESUP_MAY_ACUM';
			break;
		case 5:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) AS REAL_JUN_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06) AS PRESUP_JUN_ACUM';
			break;
		case 6:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) AS REAL_JUL_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07) AS PRESUP_JUL_ACUM';
			break;
		case 7:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) AS REAL_AUG_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08) AS PRESUP_AUG_ACUM';
			break;
		case 8:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) AS REAL_SEP_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09) AS PRESUP_SEP_ACUM';
			break;
		case 9:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,(T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) as REAL_OCT,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,T3.PRESUP10 AS PRESUP_OCT,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) AS REAL_OCT_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10) AS PRESUP_OCT_ACUM';
			break;
		case 10:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,(T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) as REAL_OCT,(T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) as REAL_NOV,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,T3.PRESUP10 AS PRESUP_OCT,T3.PRESUP11 AS PRESUP_NOV,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10+T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) AS REAL_NOV_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11) AS PRESUP_NOV_ACUM';
			break;
		case 11:
		// En este caso especial por la forma en que se construyo la consulta y para no hacerla de nuevo se envian en diciembre los acumulados de real y de presupuesto de todos los meses anteriores
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,(T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) as REAL_OCT,(T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) as REAL_NOV,(T2.CARGO12-T2.ABONO12)*(-2*T1.NATURALEZA + 1) as REAL_DEC,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,T3.PRESUP10 AS PRESUP_OCT,T3.PRESUP11 AS PRESUP_NOV,T3.PRESUP12 AS PRESUP_DEC,(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN_ACUM, T3.PRESUP01 AS PRESUP_JAN_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) AS REAL_FEB_ACUM, (T3.PRESUP01+T3.PRESUP02) AS PRESUP_FEB_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) AS REAL_MAR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03) AS PRESUP_MAR_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) AS REAL_APR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04) AS PRESUP_APR_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) AS REAL_MAY_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05) AS PRESUP_MAY_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) AS REAL_JUN_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06) AS PRESUP_JUN_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) AS REAL_JUL_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07) AS PRESUP_JUL_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) AS REAL_AUG_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08) AS PRESUP_AUG_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) AS REAL_SEP_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09) AS PRESUP_SEP_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) AS REAL_OCT_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10) AS PRESUP_OCT_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10+T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) AS REAL_NOV_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11) AS PRESUP_NOV_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10+T2.CARGO11-T2.ABONO11+T2.CARGO12-T2.ABONO12)*(-2*T1.NATURALEZA + 1) AS REAL_DEC_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11+T3.PRESUP12) AS PRESUP_DEC_ACUM,(T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11+T3.PRESUP12) AS PRESUP_ANHIO';
			break;		
	}
	
	var sql = 'SELECT  T3.SEGPAPA FROM CUENTAS19 AS T1 JOIN CTARUB AS T3 ON T1.NUM_CTA = T3.CUENTA WHERE RUBRO = 6';
	res = await ejecutarConsulta(sql);
	for (const valor of res) {
		
		// A partir de aqui me conecto a la tabla de MYSQL para obtener relacion entre departamentos y cuentas de ventas
		var sql1 = "SELECT NUM_CTA FROM DEPARTAMENTOS_CUENTAS WHERE DPTO = "+dpto+" AND NUM_CTA LIKE '"+valor.SEGPAPA+"%'";
		res1 = await ejecutarConsultaParaMySQL(sql1);
		//console.log(res1);
		var resultado1 = new Array();
		for(const valor1 of res1){
			const sql = "SELECT T1.NUM_CTA AS NUMCUENTA,(SELECT NOMBRE FROM CUENTAS19 WHERE NUM_CTA LIKE '"+valor.SEGPAPA+"________________1') AS NAMECUENTA ,T1.NATURALEZA, "+meses+"  FROM CUENTAS19 AS T1 INNER JOIN SALDOS19 AS T2 ON T1.NUM_CTA = T2.NUM_CTA INNER JOIN PRESUP19 AS T3 ON T1.NUM_CTA = T3.NUM_CTA WHERE T1.NUM_CTA = '"+valor1.NUM_CTA+"'";
			//console.log(sql);
			r1 = await ejecutarConsulta(sql);
			
			if(resultado1.length > 0){
				if(r1.length>0){
					resultado1 = resultado1.map( ind =>{
						return {
							NUMCUENTA : ind.NUMCUENTA,
							NAMECUENTA: ind.NAMECUENTA,
							NATURALEZA: ind.NATURALEZA,
							REAL_JAN: Number(ind.REAL_JAN)+Number(r1[0].REAL_JAN),
							REAL_FEB: Number(ind.REAL_FEB)+Number(r1[0].REAL_FEB),
							REAL_MAR: Number(ind.REAL_MAR)+Number(r1[0].REAL_MAR),
							REAL_APR: Number(ind.REAL_APR)+Number(r1[0].REAL_APR),
							REAL_MAY: Number(ind.REAL_MAY)+Number(r1[0].REAL_MAY),
							REAL_JUN: Number(ind.REAL_JUN)+Number(r1[0].REAL_JUN),
							REAL_JUL: Number(ind.REAL_JUL)+Number(r1[0].REAL_JUL),
							REAL_AUG: Number(ind.REAL_AUG)+Number(r1[0].REAL_AUG),
							REAL_SEP: Number(ind.REAL_SEP)+Number(r1[0].REAL_SEP),
							REAL_OCT: Number(ind.REAL_OCT)+Number(r1[0].REAL_OCT),
							REAL_NOV: Number(ind.REAL_NOV)+Number(r1[0].REAL_NOV),
							REAL_DEC: Number(ind.REAL_DEC)+Number(r1[0].REAL_DEC),
							PRESUP_JAN: Number(ind.PRESUP_JAN)+Number(r1[0].PRESUP_JAN),
							PRESUP_FEB: Number(ind.PRESUP_FEB)+Number(r1[0].PRESUP_FEB),
							PRESUP_MAR: Number(ind.PRESUP_MAR)+Number(r1[0].PRESUP_MAR),
							PRESUP_APR: Number(ind.PRESUP_APR)+Number(r1[0].PRESUP_APR),
							PRESUP_MAY: Number(ind.PRESUP_MAY)+Number(r1[0].PRESUP_MAY),
							PRESUP_JUN: Number(ind.PRESUP_JUN)+Number(r1[0].PRESUP_JUN),
							PRESUP_JUL: Number(ind.PRESUP_JUL)+Number(r1[0].PRESUP_JUL),
							PRESUP_AUG: Number(ind.PRESUP_AUG)+Number(r1[0].PRESUP_AUG),
							PRESUP_SEP: Number(ind.PRESUP_SEP)+Number(r1[0].PRESUP_SEP),
							PRESUP_OCT: Number(ind.PRESUP_OCT)+Number(r1[0].PRESUP_OCT),
							PRESUP_NOV: Number(ind.PRESUP_NOV)+Number(r1[0].PRESUP_NOV),
							PRESUP_DEC: Number(ind.PRESUP_DEC)+Number(r1[0].PRESUP_DEC),
							REAL_ACUM: Number(ind.REAL_ACUM)+Number(r1[0].REAL_ACUM),
							PRESUP_ACUM: Number(ind.PRESUP_ACUM)+Number(r1[0].PRESUP_ACUM)
						}
					});
				}
			}
			else{
				if(r1.length>0){
					resultado1.push(r1[0]);
				}	
			}
		}
		
		//const sql = "SELECT T1.NUM_CTA AS NUMCUENTA,(SELECT NOMBRE FROM CUENTAS19 WHERE NUM_CTA LIKE '"+valor.SEGPAPA+"________________1') AS NAMECUENTA ,T1.NATURALEZA, "+meses+"  FROM CUENTAS19 AS T1 INNER JOIN SALDOS19 AS T2 ON T1.NUM_CTA = T2.NUM_CTA INNER JOIN PRESUP19 AS T3 ON T1.NUM_CTA = T3.NUM_CTA WHERE T1.NUM_CTA LIKE '"+valor.SEGPAPA+"___"+dpto1+"%3'";
		//r = await ejecutarConsulta(sql);
	// Hacer algo con r
		if(resultado1.length>0){
			resultado.push(resultado1[0]);
		}
		
	}	
	
	return new Promise((resolve,reject) => {
		resolve(resultado);
	});

}
//Obtener gastos generales por departamentos
datosCOI.getGastosGeneralesXdepartamentos  = async function(dpto,mes){
	//INICIALIZACION DE VARIABLES
	var resultado = new Array();
	//dpto = 3;
	mes = 11;
	meses = '';
	switch(+mes){
		case 0:
			meses= '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,T3.PRESUP01 AS PRESUP_JAN,(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN_ACUM, T3.PRESUP01 AS PRESUP_JAN_ACUM';
			break;
		case 1:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) AS REAL_FEB_ACUM, (T3.PRESUP01+T3.PRESUP02) AS PRESUP_FEB_ACUM';
			break;
		case 2:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) AS REAL_MAR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03) AS PRESUP_MAR_ACUM';
			break;
		case 3:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) AS REAL_APR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04) AS PRESUP_APR_ACUM';
			break;
		case 4:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) AS REAL_MAY_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05) AS PRESUP_MAY_ACUM';
			break;
		case 5:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) AS REAL_JUN_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06) AS PRESUP_JUN_ACUM';
			break;
		case 6:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) AS REAL_JUL_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07) AS PRESUP_JUL_ACUM';
			break;
		case 7:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) AS REAL_AUG_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08) AS PRESUP_AUG_ACUM';
			break;
		case 8:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) AS REAL_SEP_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09) AS PRESUP_SEP_ACUM';
			break;
		case 9:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,(T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) as REAL_OCT,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,T3.PRESUP10 AS PRESUP_OCT,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) AS REAL_OCT_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10) AS PRESUP_OCT_ACUM';
			break;
		case 10:
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,(T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) as REAL_OCT,(T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) as REAL_NOV,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,T3.PRESUP10 AS PRESUP_OCT,T3.PRESUP11 AS PRESUP_NOV,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10+T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) AS REAL_NOV_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11) AS PRESUP_NOV_ACUM';
			break;
		case 11:
		// En este caso especial por la forma en que se construyo la consulta y para no hacerla de nuevo se envian en diciembre los acumulados de real y de presupuesto de todos los meses anteriores
			meses = '(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN,(T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) as REAL_FEB,(T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) as REAL_MAR,(T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) as REAL_APR,(T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) as REAL_MAY,(T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) as REAL_JUN,(T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) as REAL_JUL,(T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) as REAL_AUG,(T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) as REAL_SEP,(T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) as REAL_OCT,(T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) as REAL_NOV,(T2.CARGO12-T2.ABONO12)*(-2*T1.NATURALEZA + 1) as REAL_DEC,T3.PRESUP01 AS PRESUP_JAN,T3.PRESUP02 AS PRESUP_FEB,T3.PRESUP03 AS PRESUP_MAR,T3.PRESUP04 AS PRESUP_APR,T3.PRESUP05 AS PRESUP_MAY,T3.PRESUP06 AS PRESUP_JUN,T3.PRESUP07 AS PRESUP_JUL,T3.PRESUP08 AS PRESUP_AUG,T3.PRESUP09 AS PRESUP_SEP,T3.PRESUP10 AS PRESUP_OCT,T3.PRESUP11 AS PRESUP_NOV,T3.PRESUP12 AS PRESUP_DEC,(T2.CARGO01-T2.ABONO01)*(-2*T1.NATURALEZA + 1) as REAL_JAN_ACUM, T3.PRESUP01 AS PRESUP_JAN_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02)*(-2*T1.NATURALEZA + 1) AS REAL_FEB_ACUM, (T3.PRESUP01+T3.PRESUP02) AS PRESUP_FEB_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03)*(-2*T1.NATURALEZA + 1) AS REAL_MAR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03) AS PRESUP_MAR_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04)*(-2*T1.NATURALEZA + 1) AS REAL_APR_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04) AS PRESUP_APR_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05)*(-2*T1.NATURALEZA + 1) AS REAL_MAY_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05) AS PRESUP_MAY_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06)*(-2*T1.NATURALEZA + 1) AS REAL_JUN_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06) AS PRESUP_JUN_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07)*(-2*T1.NATURALEZA + 1) AS REAL_JUL_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07) AS PRESUP_JUL_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08)*(-2*T1.NATURALEZA + 1) AS REAL_AUG_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08) AS PRESUP_AUG_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09)*(-2*T1.NATURALEZA + 1) AS REAL_SEP_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09) AS PRESUP_SEP_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10)*(-2*T1.NATURALEZA + 1) AS REAL_OCT_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10) AS PRESUP_OCT_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10+T2.CARGO11-T2.ABONO11)*(-2*T1.NATURALEZA + 1) AS REAL_NOV_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11) AS PRESUP_NOV_ACUM,(T2.CARGO01-T2.ABONO01+T2.CARGO02-T2.ABONO02+T2.CARGO03-T2.ABONO03+T2.CARGO04-T2.ABONO04+T2.CARGO05-T2.ABONO05+T2.CARGO06-T2.ABONO06+T2.CARGO07-T2.ABONO07+T2.CARGO08-T2.ABONO08+T2.CARGO09-T2.ABONO09+T2.CARGO10-T2.ABONO10+T2.CARGO11-T2.ABONO11+T2.CARGO12-T2.ABONO12)*(-2*T1.NATURALEZA + 1) AS REAL_DEC_ACUM, (T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11+T3.PRESUP12) AS PRESUP_DEC_ACUM,(T3.PRESUP01+T3.PRESUP02+T3.PRESUP03+T3.PRESUP04+T3.PRESUP05+T3.PRESUP06+T3.PRESUP07+T3.PRESUP08+T3.PRESUP09+T3.PRESUP10+T3.PRESUP11+T3.PRESUP12) AS PRESUP_ANHIO';
			break;		
	}


	//var sql = 'SELECT  T3.SEGPAPA FROM CUENTAS19 AS T1 JOIN CTARUB AS T3 ON T1.NUM_CTA = T3.CUENTA WHERE RUBRO = 7';
	//res = await ejecutarConsulta(sql);
	//for (const valor of res) {
		const sql = "SELECT T1.NUM_CTA AS NUMCUENTA,T1.NOMBRE AS NAMECUENTA ,T1.NATURALEZA, "+meses+"  FROM CUENTAS19 AS T1 INNER JOIN SALDOSDP19 AS T2 ON T1.NUM_CTA = T2.NUM_CTA INNER JOIN PRESUPDP19 AS T3 ON T1.NUM_CTA = T3.NUM_CTA WHERE T2.DEPTO ="+dpto+" AND T3.DEPTO = "+dpto+" ORDER BY T1.NUM_CTA";
		//console.log(sql);
		r = await ejecutarConsulta(sql);
	// Hacer algo con r
	//	if(r.length>0){
			
	//	}
		
	//}	
	
	return new Promise((resolve,reject) => {
		resolve(r);
	});
}
//Ejecuta consulta para FIREBIRD
function ejecutarConsulta (sql) {
    return new Promise ((resolve, reject) => {
        Firebird.attach(options, function(err, db) { 
            if (err)
                reject(err);
        
            // db = DATABASE
            db.query(sql, function(err, result) {
                // IMPORTANT: close the connection
                if (err)
                    reject(err)
                resolve(result);
                db.detach();
            });
        })
 
    });
}
//Ejecuta consulta para BD de MYSQL
function ejecutarConsultaParaMySQL (sql) {
    return new Promise ((resolve, reject) => {
		try{
			if(con){
				con.query(sql, function (err, result) {
					if(err){
						reject(err);
					}
					else{
						resolve(result);
					}
					
				});
				
			}
		}
		catch(error){
			reject(error);
		}
   
    });
}
module.exports = datosCOI;